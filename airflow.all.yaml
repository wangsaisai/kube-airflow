apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: NodePort
  selector:
    app: airflow
    tier: db
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
      nodePort: 30432
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  type: ClusterIP
  selector:
    app: airflow
    tier: rabbitmq
  ports:
    - name: node
      protocol: TCP
      port: 5672
      targetPort: node
    - name: management
      protocol: TCP
      port: 15672
      targetPort: management
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: NodePort
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web
      nodePort: 32080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: airflow
      tier: db
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: db
    spec:
      restartPolicy: Always
      volumes:
      - name: postgres-storage
        hostPath:
          path: /mnt/nfs/airflow/postgres
      containers:
      - name: postgres
        image: postgres:10.5
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: "postgres"
         - name: POSTGRES_PASSWORD
           value: "postgres"
         - name: POSTGRES_DB
           value: "airflow"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        args: ["-c", "max_connections=1000"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: airflow
      tier: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: rabbitmq
    spec:
      restartPolicy: Always
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7.7-management
        imagePullPolicy: IfNotPresent
        ports:
        - name: management
          containerPort: 15672
        - name: node
          containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: airflow
        - name: RABBITMQ_DEFAULT_PASS
          value: airflow
        - name: RABBITMQ_DEFAULT_VHOST
          value: airflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: airflow
      tier: web
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      volumes:
      - name: airflow-dags
        hostPath:
          path: /mnt/nfs/airflow/airflow_dags
      - name: airflow-logs
        hostPath:
          path: /mnt/nfs/airflow/airflow_logs
      containers:
      - name: web
        image: mumoshu/kube-airflow:1.10.6-1.16.2
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: airflow-dags
          mountPath: /usr/local/airflow/dags
        - name: airflow-logs
          mountPath: /usr/local/airflow/logs
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        - name: FERNET_KEY
          value: "sPaDQYTnYPXA189s25mgyG8HqYwaYvSwXZs6qp9zNEs="
        - name: LOAD_DAGS_EXAMPLES
          value: "false"
        - name: POSTGRES_CREDS
          value: "postgres:postgres"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: RABBITMQ_CREDS
          value: "RABBITMQ_CREDS"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: AIRFLOW_WEB_HOST
          value: "input-one-k8s-node-ip"
        - name: AIRFLOW_WEB_PORT
          value: "32080"
        - name: REMOTE_BASE_LOG_FOLDER
          value: "/mnt/nfs/airflow/airflow_logs"
        ports:
        - name: web
          containerPort: 8080
        args: ["webserver"]
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
spec:
  selector:
    matchLabels:
      app: airflow
      tier: scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      volumes:
      - name: airflow-dags
        hostPath:
          path: /mnt/nfs/airflow/airflow_dags
      - name: airflow-logs
        hostPath:
          path: /mnt/nfs/airflow/airflow_logs
      containers:
      - name: scheduler
        image: mumoshu/kube-airflow:1.10.6-1.16.2
        imagePullPolicy: IfNotPresent
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        volumeMounts:
        - name: airflow-dags
          mountPath: /usr/local/airflow/dags
        - name: airflow-logs
          mountPath: /usr/local/airflow/logs
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        - name: FERNET_KEY
          value: "sPaDQYTnYPXA189s25mgyG8HqYwaYvSwXZs6qp9zNEs="
        - name: LOAD_DAGS_EXAMPLES
          value: "false"
        - name: POSTGRES_CREDS
          value: "postgres:postgres"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: RABBITMQ_CREDS
          value: "RABBITMQ_CREDS"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: AIRFLOW_WEB_HOST
          value: "input-one-k8s-node-ip"
        - name: AIRFLOW_WEB_PORT
          value: "32080"
        - name: REMOTE_BASE_LOG_FOLDER
          value: "/mnt/nfs/airflow/airflow_logs"
        args: ["scheduler", "-n", "5"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
spec:
  selector:
    matchLabels:
      app: airflow
      tier: worker
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: airflow-dags
        hostPath:
          path: /mnt/nfs/airflow/airflow_dags
      - name: airflow-logs
        hostPath:
          path: /mnt/nfs/airflow/airflow_logs
      containers:
      - name: worker
        image: mumoshu/kube-airflow:1.10.6-1.16.2
        imagePullPolicy: IfNotPresent
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: airflow-dags
          mountPath: /usr/local/airflow/dags
        - name: airflow-logs
          mountPath: /usr/local/airflow/logs
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        - name: FERNET_KEY
          value: "sPaDQYTnYPXA189s25mgyG8HqYwaYvSwXZs6qp9zNEs="
        - name: LOAD_DAGS_EXAMPLES
          value: "false"
        - name: POSTGRES_CREDS
          value: "postgres:postgres"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: RABBITMQ_CREDS
          value: "RABBITMQ_CREDS"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: AIRFLOW_WEB_HOST
          value: "input-one-k8s-node-ip"
        - name: AIRFLOW_WEB_PORT
          value: "32080"
        - name: REMOTE_BASE_LOG_FOLDER
          value: "/mnt/nfs/airflow/airflow_logs"
        - name: SMTP_HOST
          value: "gmail.com"
        - name: SMTP_STARTTLS
          value: "False"
        - name: SMTP_SSL
          value: "False"
        - name: SMTP_PORT
          value: "25"
        - name: SMTP_MAIL_FROM
          value: "xxx@gmail.com"
        args: ["worker"]

