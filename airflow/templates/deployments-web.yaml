apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{- .Values.airflow.prefix -}}web"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
        - name: "{{- .Values.airflow.prefix -}}web"
          image: {{ .Values.airflow.image }}:{{ .Values.airflow.imageTag }}
          imagePullPolicy: {{ .Values.airflow.image_pull_policy}}
          ports:
            - name: "{{- .Values.airflow.prefix -}}web"
              containerPort: 8080
          env:
            - name: POSTGRES_HOST
              value: {{ template "airflow.postgresql.fullname" . }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresDatabase }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.postgresPassword }}
            - name: REDIS_HOST
              value: {{ template "airflow.redis.fullname" . }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.redisPassword }}
          args: ["webserver"]
          livenessProbe:
            httpGet:
              path: "{{ .Values.airflow.url_prefix }}/health"
              port: "{{- .Values.airflow.prefix -}}web"
            initialDelaySeconds: 120
            periodSeconds: 10
