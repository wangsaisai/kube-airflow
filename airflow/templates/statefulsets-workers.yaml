# Workers are not in deployment, but in StatefulSet, to allow each worker expose a mini-server
# that only serve logs, that will be used by the web server.

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{- .Values.airflow.prefix -}}worker"
spec:
  # selector:
  #   matchLabels:
  #     app: airflow
  serviceName: "{{- .Values.airflow.prefix -}}workers"
  updateStrategy:
    type: RollingUpdate
  # Use experimental burst mode for faster StatefulSet scaling
  #   https://github.com/kubernetes/kubernetes/commit/c2c5051adf096ffd48bf1dcf5b11cb47e464ecdd
  podManagementPolicy: Parallel
  replicas: {{ .Values.celery.num_workers }}
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: "{{- .Values.airflow.prefix -}}worker"
          imagePullPolicy: {{ .Values.airflow.image_pull_policy}}
          image: "{{ .Values.airflow.image }}"
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: dags-data
              mountPath: {{ .Values.airflow.dag_path }}
          {{- end }}
          # volumes:
          #     - /localpath/to/dags:/usr/local/airflow/dags
          envFrom:
            - configMapRef:
                name: "{{- .Values.airflow.prefix -}}airflow-env"
          args: ["worker"]
          ports:
            - name: "{{- .Values.airflow.prefix -}}wlog"
              containerPort: 8793
      volumes:
        - name: dags-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
              claimName: {{ .Values.persistence.existingClaim | default (include "airflow.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
